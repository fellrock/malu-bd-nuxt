// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

/////////////////  ENUM GOES HERE  //////////////////
enum Status {
  REGISTERED
  PENDING
  CONFIRMED
  ATTENDED
  CANCELLED
}

enum Category {
  Amigos
  Creche
  Familia
  Padrinhos
}
////////////////////////////////////////////////////

// Party guest model
model Guest {
  id            String    @id @default(cuid())
  name          String    @unique
  email         String?   // Optional but unique when provided
  inviteCode    String    // No longer unique - multiple guests per code
  status        Status    @default(REGISTERED)
  dietary       String?
  notes         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // New fields
  category      Category
  kidAge        Int?
  maleKid       Boolean?  @default(false)
  referenceCode String
  surveyRatingId Int?      // FK to future Rating table
  
  // Relations
  statusLogs    GuestStatusLog[]
  
  @@index([inviteCode])
  @@index([referenceCode])
}

// Guest status change log for audit trail
model GuestStatusLog {
  id          String   @id @default(cuid())
  guestId     String
  fromStatus  Status?  // null for initial status
  toStatus    Status
  changedAt   DateTime @default(now())
  reason      String?  // Optional reason for status change
  
  // Relations
  guest       Guest    @relation(fields: [guestId], references: [id], onDelete: Cascade)
  
  @@index([guestId])
  @@index([changedAt])
}
